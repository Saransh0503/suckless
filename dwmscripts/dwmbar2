#!/bin/bash

# CPU Usage
cpu() {
  read cpu a b c previdle rest < /proc/stat
  prevtotal=$((a + b + c + previdle))
  sleep 0.5
  read cpu a b c idle rest < /proc/stat
  total=$((a + b + c + idle))
  cpu=$((100 * ((total - prevtotal) - (idle - previdle)) / (total - prevtotal)))
  echo -e "$cpu%"
}

# RAM Usage
mem() {
  mem="$(free -h | awk '/^Mem/ { print $3 }' | sed 's/i//g')"
  echo -e "$mem"
}

# Disk Usage
hdd() {
  hdd="$(df -h --output=used,pcent / | tail -1)"
  echo -e "$hdd"
}

# CPU Temperature with dynamic symbol
temp() {
  TEMP="$(sensors | awk 'BEGIN {i = 0; t = 0} /Core/ {++i; t += $3} END {if (i > 0) {printf "%0.1f", t / i}}')"
  if (( $(echo "$TEMP < 40" | bc -l) )); then
    SYMBOL="  "
  elif (( $(echo "$TEMP >= 40" | bc -l) && $(echo "$TEMP <= 70" | bc -l) )); then
    SYMBOL="  "
  else
    SYMBOL="  "
  fi
  echo -e "$TEMP°C $SYMBOL"
}

## BATT
power() {
  # Read battery capacities
  BAT1=$(cat /sys/class/power_supply/BAT0/capacity)
  BAT2=$(cat /sys/class/power_supply/BAT1/capacity)
  
  # Calculate the average battery percentage
  AVG=$(( (BAT1 + BAT2) / 2 ))

  # Determine the battery symbol based on the average percentage
  if (( AVG >= 80 )); then
    SYMBOL="  " # Full battery
  elif (( AVG >= 60 )); then
    SYMBOL="  " # 3/4 battery
  elif (( AVG >= 40 )); then
    SYMBOL="  " # 1/2 battery
  elif (( AVG >= 20 )); then
    SYMBOL="  " # 1/4 battery
  else
    SYMBOL="  " # Empty battery
  fi

  # Display battery status with the symbol
  echo -e "$SYMBOL $AVG%"
}


# Volume with dynamic symbol
volume() {
  volume=$(pactl get-sink-volume @DEFAULT_SINK@ | grep -oP '\d+%' | head -1 | tr -d '%')
  muted=$(pactl get-sink-mute @DEFAULT_SINK@ | grep -o 'yes\|no')
  if [ "$muted" = "yes" ]; then
    SYMBOL=" 🔇 "
    echo -e "$SYMBOL Muted"
  else
    if (( volume == 0 )); then
      SYMBOL=" 🔈 "
    elif (( volume <= 50 )); then
      SYMBOL=" 🔉 "
    else
      SYMBOL=" 🔊 "
    fi
    echo -e "$SYMBOL $volume%"
  fi
}

# Screen Brightness with dynamic symbol
brightness() {
  brightness=$(cat /sys/class/backlight/*/brightness)
  max_brightness=$(cat /sys/class/backlight/*/max_brightness)
  percent=$((100 * brightness / max_brightness))
  if (( percent <= 20 )); then
    SYMBOL=" 🌑 "
  elif (( percent <= 50 )); then
    SYMBOL=" 🌓 "
  else 
    SYMBOL="  "
  fi
  echo -e "$percent% $SYMBOL"
}

# Date and Time
clock() {
  dte="$(date +"%a, %B %d %I:%M %p" | sed 's/  / /g')"
  echo -e "$dte"
}

# Infinite loop to update the dwm status bar
while true; do
  xsetroot -name "[    $(cpu)  ]    [    $(mem)  ]    [    $(hdd)  ]    [  $(power)  ]    [  $(temp)  ]    [  $(volume)  ]    [  $(brightness)  ]    [    $(clock)  ] "
  sleep 3s
done &

